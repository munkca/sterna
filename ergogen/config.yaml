meta:
  engine: 4.1.0
units:

  # Proxy Spacing Variables
  kx: cx
  ky: cy
  default_width: kx
  default_height: ky

  # Padding Variables
  px: kx + 2
  py: ky + 2
   # Keycap size
  capw: 17.5        # MBK keycaps
  caph: 16.5
   # Mirroring
  center_spread: 1.5capw # Distance between inner top keys
  master_angle: 22  # Degrees that the halves are angled (20)
  # Stagger
  ring_stagger: 9 #8
  middle_stagger: 7.5 #5.5
  index_stagger: -7.375 #5.375
  inner_stagger: -py/2
  # Splay
  ring_splay: 9     # Between pinky and ring (7)
  middle_splay: 6   # Between ring and middle(4)
  index_splay: 1

  # Thumb cluster
  thumb_shift_x: 0
  thumb_shift_y: -ky+7.5 #+5 originally
  thumb_splay: 7

  # Outlines
  edge_border: 2    # Border around PCB, outside the keycaps' perimeter
  outer_kx: capw + 2edge_border
  outer_ky: caph + 2edge_border
  xiao_cutout_x: 19.5
  xiao_cutout_y: 22.5
  mounting_hole_r: 1
  clearance_hole_r: 1.6
  cover_hole_margin: 3  # Inset from the edge
  casewall: 2 # thickness of case wall
  case_kx: outer_kx + 2casewall
  case_ky: outer_ky + 2casewall

  # bump the top-center of the mcu cover down to match the master angle
  cover_bump_top: -4
  cover_bump_home: -9 # ditto on bottom
  standoff_clearance_hole_r: 2.75

  # Components
  xiao_w: 17.5
  xiao_h: 21
  bat_plug_w: 7.6
  bat_plug_h: 5.9
  bat_w: 32   #401030
  bat_h: 12

  # Laser cutting
  kerf: 0.006 * 25.4 # Inches



 

points:
  zones:
    matrix:
      # Fix placement on KiCAD sheet
      anchor:
        shift: [108, -100]
      mirror: &mirror
        ref: matrix_inner_top
        distance: center_spread
        shift: [capw/2, caph/2]
      rotate: -master_angle
      key:
        padding: ky
        spread: kx
        tags: [key]

      columns:
        pinky:
          key:
            splay: ring_splay + middle_splay
          rows:
            bottom:
              row_net: R1
              column_net: C4
            home:
              row_net: R0
              column_net: C4
            top:
              skip: true
            bottom.mirror:
              row_net: R4
              column_net: C4
            home.mirror:
              row_net: R5
              column_net: C4

        ring:
          key:
            stagger: ring_stagger
            splay: -ring_splay
            origin: [-kx/2, -ky/2]
          rows:
            bottom:
              row_net: R2
              column_net: C3
            home:
              row_net: R1
              column_net: C3
            top:
             row_net: R0
             column_net: C3
            bottom.mirror:
              row_net: R3
              column_net: C3
            home.mirror:
              row_net: R4
              column_net: C3
            top.mirror:
             row_net: R5
             column_net: C3

        middle:
          key:
            stagger: middle_stagger
            splay: -middle_splay
            origin: [-kx/2, -ky/2]
          rows:
            bottom:
              row_net: R2
              column_net: C2
            home:
              row_net: R1
              column_net: C2
            top:
             row_net: R0
             column_net: C2
            bottom.mirror:
              row_net: R3
              column_net: C2
            home.mirror:
              row_net: R4
              column_net: C2
            top.mirror:
             row_net: R5
             column_net: C2

        index:
          key:
            stagger: index_stagger
            splay: -index_splay
            origin: [-kx/2, -ky/2]
          rows:
            bottom:
              row_net: R2
              column_net: C1
            home:
              row_net: R1
              column_net: C1
            top:
             row_net: R0
             column_net: C1
            bottom.mirror:
              row_net: R3
              column_net: C1
            home.mirror:
              row_net: R4
              column_net: C1
            top.mirror:
             row_net: R5
             column_net: C1

        inner:
          key:
            stagger: inner_stagger
          rows:
            bottom:
              skip: true
            home:
              row_net: R1
              column_net: C0
            top:
             row_net: R0
             column_net: C0
            home.mirror:
              row_net: R4
              column_net: C0
            top.mirror:
             row_net: R5
             column_net: C0

      rows:
        bottom:
        home:
        top:

  zones.thumbs:
      mirror: *mirror
      anchor:
        ref: matrix_inner_bottom
        shift: [thumb_shift_x, thumb_shift_y]
      key:
        padding: ky
        spread: kx
        tags: [key]

      columns:
        home:
          key:
            splay: -thumb_splay
            origin: [-kx/2, kx/2]
            row_net: R2
            column_net: C4
          key.mirror:
            row_net: R3
            column_net: C4

        reachy:
          key:
            splay: -thumb_splay
            origin: [-kx/2, -kx/2]
            row_net: R2
            column_net: C0
          key.mirror:
            row_net: R3
            column_net: C0

      rows:
        thumb:


  zones.mcu:
    anchor:
      aggregate.parts: [matrix_inner_top, mirror_matrix_inner_top]
      shift: [0, -0.7ky - 0.5xiao_h]
    key:
      name: mcu
      width: xiao_w
      height: xiao_h

  zones.mounting_hole_1:
    anchor:
      aggregate.parts: [thumbs_home_thumb, thumbs_reachy_thumb]
      shift: [0,0]
    mirror: *mirror
    key:
      name: mounting_hole_1
      width: 1
      height: 1
      tags: [mounting_hole]

  zones.mounting_hole_2: #where do we need these?
    anchor:
      aggregate.parts: [matrix_ring_top, matrix_middle_top]
      shift: [-0.5,-4.5]
    mirror: *mirror
    key:
      name: mounting_hole_2
      width: 1
      height: 1
      tags: [mounting_hole]

  zones.mounting_hole_3: #where do we need these?
    anchor:
      ref: [matrix_pinky_home]
      shift: [kx/2+1,-0.5]
    mirror: *mirror
    key:
      name: mounting_hole_3
      width: 1
      height: 1
      tags: [mounting_hole]

  zones.mcu_cover_mounting_hole_top:
    mirror: *mirror
    anchor:
      ref: matrix_inner_top
      shift: [(kx + kx - capw)/2 + cover_hole_margin, -0.25caph - cover_hole_margin]
    
    key:
      width: 1
      height: 1
      tags: [mcu_cover_mounting_hole]

  zones.mcu_cover_mounting_hole_bottom:
    $extends: points.zones.mcu_cover_mounting_hole_top
    anchor:
      ref: matrix_inner_home
      shift: [(kx + kx - capw)/2 + cover_hole_margin, -caph + cover_hole_margin-3]
    key:
      width: 1
      height: 1

outlines:
  board:
    - what: polygon
      operation: stack
      points:
        - ref: matrix_pinky_home
          shift: [-0.5outer_kx,0.5outer_ky]
        - ref: matrix_pinky_home
          shift: [0.5px,0.5outer_ky]
        - ref: matrix_ring_top
          shift: [-0.5outer_kx,0.5outer_ky]
        - ref: matrix_ring_top
          shift: [0.5px,0.5outer_ky]
        - ref: matrix_middle_top
          shift: [-0.5outer_kx,0.5outer_ky]
        - ref: matrix_middle_top
          shift: [0.5outer_kx,0.5outer_ky]
        - ref: matrix_index_top
          shift: [-0.5px+3,0.5outer_ky]
        - ref: matrix_index_top
          shift: [0.5outer_kx,0.5outer_ky]
        - ref: matrix_inner_top
          shift: [-0.5px+5,0.5outer_ky]
        - ref: matrix_inner_top
          shift: [0.5outer_kx,0.5outer_ky]

        - ref: matrix_inner_top
          shift: [0.5outer_kx,-2]
        - ref: mirror_matrix_inner_top
          shift: [0.5outer_kx,-2]

        - ref: mirror_matrix_inner_top
          shift: [0.5outer_kx,0.5outer_ky]
        - ref: mirror_matrix_inner_top
          shift: [-0.5px+5,0.5outer_ky]
        - ref: mirror_matrix_index_top
          shift: [0.5outer_kx,0.5outer_ky]
        - ref: mirror_matrix_index_top
          shift: [-0.5px+3,0.5outer_ky]
        - ref: mirror_matrix_middle_top
          shift: [0.5outer_kx,0.5outer_ky]
        - ref: mirror_matrix_middle_top
          shift: [-0.5outer_kx,0.5outer_ky]
        - ref: mirror_matrix_ring_top
          shift: [0.5px,0.5outer_ky]
        - ref: mirror_matrix_ring_top
          shift: [-0.5outer_kx,0.5outer_ky]
        - ref: mirror_matrix_pinky_home
          shift: [0.5px,0.5outer_ky]
        - ref: mirror_matrix_pinky_home
          shift: [-0.5outer_kx,0.5outer_ky]
        - ref: mirror_matrix_pinky_bottom
          shift: [-0.5outer_kx,-0.5outer_ky]
        - ref: mirror_matrix_pinky_bottom
          shift: [0.5outer_kx,-0.5outer_ky]

        
        - ref: mirror_thumbs_home_thumb
          shift: [-0.5outer_kx,0]
        - ref: mirror_thumbs_home_thumb
          shift: [-0.5outer_kx,-0.5outer_ky]

        - ref.aggregate.parts: [mirror_thumbs_home_thumb, mirror_thumbs_reachy_thumb]
          shift: [0,-0.5outer_ky]

        - ref: mirror_thumbs_reachy_thumb
          shift: [0.5outer_kx,-0.5outer_ky]

        - ref: mirror_thumbs_reachy_thumb
          shift: [0.5outer_kx,0]

        - ref.aggregate.parts: [mirror_thumbs_reachy_thumb, thumbs_reachy_thumb]
          shift: [0,0]

        - ref: thumbs_reachy_thumb
          shift: [0.5outer_kx,0]  

        - ref: thumbs_reachy_thumb
          shift: [0.5outer_kx,-0.5outer_ky]

        - ref.aggregate.parts: [thumbs_reachy_thumb, thumbs_home_thumb]
          shift: [0,-0.5outer_ky]

        - ref: thumbs_home_thumb
          shift: [-0.5outer_kx,-0.5outer_ky]
        - ref: thumbs_home_thumb
          shift: [-0.5outer_kx, 0]

        - ref: matrix_pinky_bottom
          shift: [0.5outer_kx,-0.5outer_ky]

        - ref: matrix_pinky_bottom
          shift: [-0.5outer_kx,-0.5outer_ky]
      fillet: 2

  keycaps:
    - what: rectangle
      where: key
      size: [capw, caph]
  
  _switch_holes:
    - what: rectangle
      where: key
      size: [13.95 - kerf, 13.95 - kerf]
  
 
  _all_mounting_holes:
    - what: circle
      where: [mounting_hole_1, mounting_hole_2, mounting_hole_3, mirror_mounting_hole_1, mirror_mounting_hole_2, mirror_mounting_hole_3, mcu_cover_mounting_hole_top, mcu_cover_mounting_hole_bottom, mirror_mcu_cover_mounting_hole_top, mirror_mcu_cover_mounting_hole_bottom]
      radius: mounting_hole_r

  mcu_cover:
    - what: polygon
      points:
        - ref: matrix_inner_top
          shift: [(kx + kx - capw)/2, -0.25caph]
        - ref.aggregate.parts:
          - ref: matrix_inner_top
            shift: [(kx + kx - capw)/2, -0.25caph]
          - ref: mirror_matrix_inner_top
            shift: [(kx + kx - capw)/2, -0.25caph]
          shift: [0, cover_bump_top]
        - ref: mirror_matrix_inner_top
          shift: [(kx + kx - capw)/2, -0.25caph]
        - ref: mirror_matrix_inner_home
          shift: [(kx + kx - capw)/2, -caph-3]
        - ref.aggregate.parts:
          - ref: matrix_inner_home
            shift: [(kx + kx - capw)/2, -caph]
          - ref: mirror_matrix_inner_home
            shift: [(kx + kx - capw)/2, -caph]
          shift: [0, cover_bump_home-3]
        - ref: matrix_inner_home
          shift: [(kx + kx - capw)/2, -caph-3]
      fillet: 2
    - what: circle
      where: mcu_cover_mounting_hole_top
      operation: stack
      radius: mounting_hole_r
    - what: circle
      where: mcu_cover_mounting_hole_bottom
      operation: stack
      radius: mounting_hole_r
    - what: circle
      where: mirror_mcu_cover_mounting_hole_top
      operation: stack
      radius: mounting_hole_r
    - what: circle
      where: mirror_mcu_cover_mounting_hole_bottom
      operation: stack
      radius: mounting_hole_r
    
  _mcu_cutout: 
    - what: rectangle
      adjust:
        ref: mcu
        shift: [0, 0]
      size: [xiao_cutout_x, xiao_cutout_y]

  _bat_cutout: 
    - what: rectangle
      adjust:
        ref: mcu
        shift: [0, -xiao_cutout_y/2]
      size: [bat_w+1.2, bat_h]
    - what: rectangle #other side of mcu
      adjust:
        ref: mcu
        shift: [0, xiao_cutout_y/2+5]
      size: [xiao_cutout_x, xiao_cutout_y]
    - what: rectangle #plug
      adjust:
        ref: mcu
        shift: [xiao_w/2 + 4.4, -xiao_h/2 + 6]
      size: [bat_plug_h+1, bat_plug_w]

  top_plate: #need more cut, battery
    - name: board
    - name: _switch_holes
      operation: subtract
    - name: _mcu_cutout
      operation: subtract
    - name: _bat_cutout
      operation: subtract
    - name:  _all_mounting_holes
      operation: subtract

  combo:
  - name: board
 # - name: keycaps
 #   operation: stack
  - name: _all_mounting_holes
    operation: stack
 # - name: mcu_cover
 #   operation: stack
 # - name: top_plate
 #   operation: stack
 # - operation: subtract
 #   name: keys


pcbs:
  sterna:
    outlines:
      main:
        outline: board
        
    footprints:
      choc_hotswap:
        what: choc
        where: key
        params:
          keycaps: true
          reverse: false
          hotswap: true
          from: "{{row_net}}"
          to: "{{colrow}}"
      key_diodes:
        what: better_diode
        where: key
        params:
          from: "{{colrow}}"
          to: "{{column_net}}"
          through_hole: false
          front: true
          back: false
          via_from: false
          via_to: false
        adjust:
          shift: [0, -4.7]
      seeed_xiao:
        what: seeed_xiao
        where:
          ref.aggregate.parts: [matrix_inner_home, mirror_matrix_inner_home]
          shift: [0, -3.5]
        params:
          pogo_pins: true
          P0: R0
          P1: R1
          P2: R2
          P3: C0
          P4: C1
          P5: C2
          P6: C3
          P10: R5
          P9: R4
          P8: R3
          P7: C4
      power_sw:
        what: slider
        where.$extends: pcbs.sterna.footprints.seeed_xiao.where
        adjust.shift: [-0.55, xiao_h/2]
        params:
          side: B
          from: "BAT+"
          to: BAT_POS
      battery:
        what: jstph
        where:
          $extends: pcbs.sterna.footprints.seeed_xiao.where
          rotate: 0
        adjust.shift: [xiao_w/2 + 4.4, -xiao_h/2 + 6] #- bat_plug_h/2
        params:
          pos: BAT_POS
          neg: GND
      reset_button:
        what: button_side_push
        where:
          ref: mirror_matrix_inner_top
          shift: [outer_kx/2 - 2.3, outer_ky/2 - 6]
          rotate: -90
        params:
          side: B
          from: RST
          to: GND
          
      mcu_mounting_holes:
        what: hole_m2
        where: [mcu_cover_mounting_hole]
        params:
          plated: true

      mounting_holes:
        what: hole_m2
        where: [mounting_hole]
      
cases:
  bottom:
    - name: board
      extrude: 1
    - name: _all_mounting_holes
      extrude: 4
